package com.example.xwysun.wsdltest.device;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.2.8.3
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class COGNetworkInterface extends COGDeviceEntity implements KvmSerializable
{

    
    public Boolean Enabled=false;
    
    public COGNetworkInterfaceInfo Info;
    
    public COGNetworkInterfaceLink Link;
    
    public COGIPv4NetworkInterface IPv4;
    
    public COGIPv6NetworkInterface IPv6;
    
    public COGNetworkInterfaceExtension Extension;
    

    
    
    @Override
    public void loadFromSoap(java.lang.Object paramObj,COGExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);

    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,COGExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("Enabled"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Enabled = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.Enabled = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Info"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Info = (COGNetworkInterfaceInfo)__envelope.get(j,COGNetworkInterfaceInfo.class,false);
            }
            return true;
        }
        if (info.name.equals("Link"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Link = (COGNetworkInterfaceLink)__envelope.get(j,COGNetworkInterfaceLink.class,false);
            }
            return true;
        }
        if (info.name.equals("IPv4"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.IPv4 = (COGIPv4NetworkInterface)__envelope.get(j,COGIPv4NetworkInterface.class,false);
            }
            return true;
        }
        if (info.name.equals("IPv6"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.IPv6 = (COGIPv6NetworkInterface)__envelope.get(j,COGIPv6NetworkInterface.class,false);
            }
            return true;
        }
        if (info.name.equals("Extension"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Extension = (COGNetworkInterfaceExtension)__envelope.get(j,COGNetworkInterfaceExtension.class,false);
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }
    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return Enabled;
        }
        if(propertyIndex==count+1)
        {
            return this.Info!=null?this.Info:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.Link!=null?this.Link:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.IPv4!=null?this.IPv4:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.IPv6!=null?this.IPv6:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+6;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "Enabled";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+1)
        {
            info.type = COGNetworkInterfaceInfo.class;
            info.name = "Info";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+2)
        {
            info.type = COGNetworkInterfaceLink.class;
            info.name = "Link";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+3)
        {
            info.type = COGIPv4NetworkInterface.class;
            info.name = "IPv4";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+4)
        {
            info.type = COGIPv6NetworkInterface.class;
            info.name = "IPv6";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+5)
        {
            info.type = COGNetworkInterfaceExtension.class;
            info.name = "Extension";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

